<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Node安装和配置]]></title>
    <url>%2F2017%2F09%2F21%2F20170921-install-node-on-windows7%2F</url>
    <content type="text"><![CDATA[下载程序官网下载Node安装包，或者中国国内到这里下载。 安装NodeWindows 系统下载对应版本的 msi 安装包后，双击安装即可，新版的Node会自动将node添加到系统变量。安装成功后就可以使用node命令和npm命令。至此，node算是安装完成。 自定义Node如果不想利用 msi 安装包进行安装，可以下载zip文件采用离线配置的方式安装。 下载zip文件，解压到自己的目录将node目录配置到环境变量例如我的node在D:\SoftWare\node目录下，将”D:\SoftWare\node”添加到环境变量中，并在CMD中执行以下命令验证是否成功：12node -v # 查看node版本npm -v # 查看npm版本 配置global目录和cache目录在node目录中新建两个目录，node_cache，node_global。 然后将node_global目录添加到环境变量我这里是将”D:\SoftWare\node\node_global”添加到环境变量的path中。最后CMD中执行以下两条命令配置node的global目录和cache目录：12npm config set prefix &quot;D:\SoftWare\node\node_global&quot;npm config set cache &quot;D:\SoftWare\node\node_cache&quot; 验证配置是否正确1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完cnpm后可以看到node_cache目录下有缓存文件，node_global目录下有cnpm相关文件。至此自定义安装Node已完成。 自定义安装方式补充说明我们的Windows系统尽量要保持系统的环境变量path不要过长，特别是软件安装过多后path变量会有很多内容。怎样才能让path的内容比较少? 我的方式是这样: 就拿刚才自定义安装Node的例子,我们新建环境变量”Node_Home”,值为”D:\SoftWare\node;D:\SoftWare\node\node_global”,然后将”%Node_Home%”添加到path中, 这样可以尽量缩短path的长度,在命令行执行命令效果一样。 npm代理国内安装npm依赖包速度很慢甚至因网络原因无法安装依赖包，解决方法如下，下面四种方式任选其一即可。 配置npm的registry地址以淘宝npm镜像举例： 临时使用 1npm --registry https://registry.npm.taobao.org install -g express 持久使用 1npm config set registry https://registry.npm.taobao.org 安装registry管理工具nrmnrm原来其实是配置registry地址。 安装nrm 12npm install -g nrm # 或者下面的命令npm --registry https://registry.npm.taobao.org install -g nrm 测试cnpm 1cnpm install express nrm相关命令 1234567nrm ls # 查看所有nrm use cnpm # 使用某一镜像nrm -h # show helpnrm list # 查看所有nrm test # 测试响应速度nrm home # go to a registry home pagenrm add xxx # 添加镜像 安装cnpm 安装cnpm 1npm install -g cnpm --registry=https://registry.npm.taobao.org 测试cnpm 1cnpm install express 为npm设置代理1npm config set proxy=http://proxy_user:proxy_password@proxy_ip_or_fqdn:8080 例如我自使用的VPN1npm config set proxy=http://127.0.0.1:1081 关于VPN的搭建，可以看我另一篇笔记：搭建Shadowsocks服务 关于代理的其他补充 Bower代理设置编辑用户目录下的 .bowerrc 文件1234&#123; &quot;proxy&quot;: &quot;http://proxy_ip_or_fqdn:8080&quot;, &quot;https-proxy&quot;: &quot;http://proxy_ip_or_fqdn:8080&quot;&#125;]]></content>
      <categories>
        <category>技术开发</category>
      </categories>
      <tags>
        <tag>NodeJs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java环境搭建]]></title>
    <url>%2F2017%2F09%2F18%2F20170918-install-java-on-windows7%2F</url>
    <content type="text"><![CDATA[新建环境变量JAVA_HOME，值为JDK路径。我的配置：1JAVA_HOME: C:\Program Files\Java\jdk1.8.0_101 新建CLASSPATH环境变量，值为一下内容：1.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; 注意前面有个点号，我的配置：1CLASSPATH: .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; 然后在path后面追加1%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin; 我的配置：1Path: %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin; OK了，检查一下：1java -version]]></content>
      <categories>
        <category>技术开发</category>
      </categories>
      <tags>
        <tag>技术开发</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows安装MySQL]]></title>
    <url>%2F2017%2F07%2F30%2F20170730-mysql-installation-and-configuration-win%2F</url>
    <content type="text"><![CDATA[1、MySQL官网下载需要的MySQL版本。 2、两种安装方式： 第一种方式，直接双击安装根据提示操作即可。 第二种方式，下载zip压缩格式进行安装。本次讲解此种安装方式。 3、解压zip文件到自己喜欢的地方。我这里解压后在 C:\Program Files\MySQL目录下。根据自己需要将MySQL根目录下的其中一个ini文件复制一份，并改名为 my.ini 如果有特殊需求，需要编辑my.ini文件作相应配置。例如我这里需要配置MySQL数据库的默认字符集。配置如下： 在[client]节点下添加如下内容，配置默认客户端字符集：12[client]default-character-set=utf8 在[mysqld]节点下添加如下内容，配置默认服务端字符集：12[mysqld]character_set_server=utf8 4、将MySQL的bin目录添加到环境变量中。在”计算机”上右键–&gt;属性，调出系统信息面板，进入”高级系统设置”–&gt;”环境变量”–&gt;”系统变量”–&gt;path 在path选项的值中追加一下内容：1;C:\Program Files\MySQL\bin; 如下图： 5、以管理员身份运行cmd，并用cd命令切换到C:\Program Files\MySQL\bin目录下。 6、执行一下命令：1mysqld install 当提示：Service successfully installed.表示安装成功。 7、启动MySQL服务：1net start mysql 8、其他配置： 修改密码 1mysqladmin -u root -p password tips：MySQL初始密码为空，输入以上命令后出现提示输入密码回车即可，提示输入新密码时输入新密码即可。 另一种方式修改密码： 123456c:&gt;mysql –u rootmysql&gt;show databases; mysql&gt;use mysql;mysql&gt;UPDATE user SET password=PASSWORD(&quot;123456&quot;) WHERE user=&apos;root&apos;;mysql&gt;FLUSH PRIVILEGES;mysql&gt;QUIT 服务的启动，停止，移除等： 123net start mysql # 启动MySQL服务net start mysql # 停止MySQL服务mysqld remove # 移除MySQL服务 9、测试MySQL：1C:\Users\liudecai&gt;mysql -u root -p 敲回车后输入MySQL的root用户密码。 输入命令查看MySQL的字符集：1mysql&gt; show variables like &apos;character%&apos;; 其他字符集设置：123456789mysql&gt; SET character_set_client = utf8;mysql&gt; SET character_set_connection = utf8;mysql&gt; SET character_set_database = utf8;mysql&gt; SET character_set_results = utf8;mysql&gt; SET character_set_server = utf8;mysql&gt; SET collation_connection = utf8;mysql&gt; SET collation_database = utf8;mysql&gt; SET collation_server = utf8;]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>系统运维</tag>
        <tag>MySQL</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu安装MySQL]]></title>
    <url>%2F2017%2F07%2F20%2F20170720-mysql-installation-and-configuration-ubuntu%2F</url>
    <content type="text"><![CDATA[Ubuntu16.04.2安装MySQLMySQL官网下载所需版本：或者执行以下命令来安装：123sudo apt-get updatesudo apt-get install mysql-serversudo mysql_secure_installation 安装MySQL：12sudo apt-get updatesudo apt-get install mysql-server 配置MySQL：1sudo mysql_secure_installation 检查是否安装成功：1systemctl status mysql.service 如果出现以下内容则安装成功：12345678*其他内容*Active: active (running)*其他内容*Started MySQL Community Server. 其他命令：12345sudo systemctl mysql start # 启动MySQLsudo systemctl mysql stop # 停止MySQLsudo systemctl mysql restart # 重启MySQLsudo systemctl start mysql # 启动MySQLmysqladmin -p -u root version # 检查MySQL版本信息 测试：12mysql -uroot -p # 输入密码登录MySQL数据库show variables like &apos;character%&apos;; # 查看MySQL的默认字符集 创建用户与授权：123CREATE USER &apos;admin&apos;@&apos;%&apos; IDENTIFIED BY &apos;admin&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;admin&apos;@&apos;%&apos; WITH GRANT OPTION;FLUSH PRIVILEGES; 字符集配置：12345678[client]default_character_set=utf8[mysqld]character_set_server=utf8[mysql]default_character_set=utf8]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>系统运维</tag>
        <tag>Ubuntu</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7安装MySQL]]></title>
    <url>%2F2017%2F07%2F12%2F20170712-mysql-installation-and-configuration-centos%2F</url>
    <content type="text"><![CDATA[CentOS7安装MySQLMySQL官网下载所需版本：https://dev.mysql.com/downloads/repo/yum/ 或者用wget命令下载：1wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 注意： 1.1.1、wget没安装的话需要先安装wget：sudo yum install -y wget 1.1.2、最好做一下和校验：1md5sum mysql57-community-release-el7-11.noarch.rpm 安装MySQL软件包的源：1sudo rpm -ivh mysql57-community-release-el7-11.noarch.rpm 开始安装MySQL1yum install mysql-community-server 或者这条命令：1sudo yum install mysql-server 启动MySQL服务：1sudo systemctl start mysqld 查看MySQL运行状态：1sudo systemctl status mysqld 如果看到一下内容说明安装并启动成功。12345678*其他内容*Active: active (running)*其他内容*Started MySQL Server. 这个命令也行，不过最后会自动转到另一个命令1service mysqld restart 实际执行效果：12[liudecai@a ~]$ service mysqld restartRedirecting to /bin/systemctl restart mysqld.service 到此MySQL算是安装成功。 安装后可以用一下命令查看mysql的临时密码：1sudo grep &apos;temporary password&apos; /var/log/mysqld.log 配置MySQL：1sudo mysql_secure_installation 安装wget12sudo yum install -y wgetwget -V]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>系统运维</tag>
        <tag>MySQL</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu Server 16.04 安装配置LAMP]]></title>
    <url>%2F2016%2F10%2F05%2F20161105-install-lamp-ubuntuserver16-04%2F</url>
    <content type="text"><![CDATA[LAMP 方案是一系列自由和开源软件的集合，包含了 Linux、Web 服务器 (Apache)、 数据库服务器 (MySQL / MariaDB) 和 PHP (脚本语言)。LAMP 是那些需要安装和构建动态网页应用的基础平台，比如WordPress、Joomla、OpenCart 和 Drupal。在这篇文章中，我将描述如何在 Ubuntu Server 16.04 LTS 上安装 LAMP，众所周知 Ubuntu 是一个基于 Linux 的操作系统，因此它构成了 LAMP 的第一个部分，在接下来的操作中，我将默认你已经安装了 Ubuntu Server 16.04。 Apache2 web 服务器的安装 :在 Ubuntu linux 中，web 服务器是 Apache2，我们可以利用下面的命令来安装它：12~$ sudo apt update~$ sudo apt install apache2 -y 如果想把apache2-utils安装上的话，执行如下命令：1~$ sudo apt-get install apache2 apache2-utils 当安装 Apache2 包之后，Apache2 相关的服务是启用的，并在重启后自动运行。在某些情况下，如果你的 Apache2 服务并没有自动运行和启用，你可以利用如下命令来启动和启用它。123~$ sudo systemctl start apache2.service~$ sudo systemctl enable apache2.service~$ sudo systemctl status apache2.service 如果你开启了 Ubuntu 的防火墙（ufw），那么你可以使用如下的命令来解除 web 服务器的端口（80和443）限制12345~$ sudo ufw status Status: active~$ sudo ufw allow in &apos;Apache Full&apos; Rule added Rule added (v6) 现在开始访问你的 web 服务器 :打开浏览器并输入服务器的IP地址或者主机名http://IP_Address_OR_Host_Name，在我的例子中我的服务器 IP是‘192.168.1.10’如下图表示安装成功。 数据库服务器的安装 (MySQL Server 5.7 或者MariaDB) :MySQL 和 MariaDB 都是 Ubuntu 16.04 中的数据库服务器。 MySQL Server 和 MariaDB Server的安装包都可以在Ubuntu 的默认软件源中找到，我们可以选择其中的一个来安装。 MySQL的安装：通过下面的命令来在终端中安装mysql服务器。1~$ sudo apt install mysql-server mysql-client 在安装过程中，它会要求你设置 mysql 服务器 root 帐户的密码。MySQL 服务器的安装到此已经结束了， MySQL 服务会自动启动并启用。我们可以通过如下的命令来校验 MySQL 服务的状态。1~$ sudo systemctl status mysql.service MariaDB Server的安装 :在终端中使用如下的命令来安装 Mariadb 10.0 服务器。1~$ sudo apt install mariadb-server 运行如下的命令来设置 MariaDB root 帐户的密码，还可以用来关闭某些选项，比如关闭远程登录功能。1~$ sudo mysql_secure_installation PHP 脚本语言的安装：PHP 7 已经存在于 Ubuntu 的软件源中了，在终端中执行如下的命令来安装 PHP 7：1~$ sudo apt install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 创建一个简单的 php 页面，并且将它移动到 apache 的文档根目录下 （/var/www/html）1234~$ vi samplepage.php &lt;?php phpinfo(); ?&gt; 在 vi 中编辑之后，保存并退出该文件，然后再将该php文件移动到www/html目录下。1~$ sudo mv samplepage.php /var/www/html/ 现在你可以从 web 浏览器中访问这个页面, 输入 :“http://&lt;Server_IP&gt;/samplepage.php”，你可以看到如下页面。 以上的页面向我们展示了 PHP 已经完全安装成功了。Tips：目前PHP官方只维护PHP7.0、PHP7.1和PHP5.6三个版本，想安装不同版本的PHP替换对于版本号即可。 phpMyAdmin 的安装：phpMyAdmin 可以让我们通过它的 web 界面来执行所有与数据库管理和其他数据库操作相关的任务，这个安装包已经存在于 Ubuntu 的软件源中。 利用如下的命令来在 Ubuntu server 16.04 LTS 中安装 phpMyAdmin。123~$ sudo apt install php-mbstring php7.0-mbstring php-gettext~$ sudo systemctl restart apache2.service~$ sudo apt install phpmyadmin 在以下的安装过程中，它会提示我们选择phpMyAdmin运行的目标服务器，选择 Apache2 并点击确定。进一步点击确定来配置phpMyAdmin管理的数据库，并指定phpMyAdmin向数据库服务器注册时所用的密码。 现在可以开始尝试访问phpMyAdmin，打开浏览器并输入:http://Server_IP_OR_Host_Name/phpmyadmin 到现在，LAMP 方案已经被成功安装并可以使用了，欢迎分享你的反馈和评论。]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>系统运维</tag>
        <tag>Ubuntu</tag>
        <tag>MySQL</tag>
        <tag>Apache2</tag>
        <tag>phpMyAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UbuntuServer16中文版安装失败]]></title>
    <url>%2F2016%2F10%2F01%2F20161001-install-ubuntuserver-error%2F</url>
    <content type="text"><![CDATA[在虚拟机中安装UbuntuServer16中文版经常失败，提示无法安装busybox-initramfs。安装失败提示如下图： 出现这个问题是Ubuntu中文汉化不全造成的。 有两种方式解决这个问题： 方式一： 1、安装时第一步选择语言时，先选择English。 2、下一步后选择Chinese，后面凡是选择语言就选中文。 3、后面其他步骤正常安装即可，这样就不会出现上面那种安装失败的提示。 方式二： 1、在安装UbuntuServer出现选择安装的画面后，按F6进行其他选项设置，如下图: 2、在最后面的横线后面追加forcepae，如下图： 3、在后面的安装步骤中需要选择中文的选择中文即可。 4、其他安装步骤不变。 安装成功后在虚拟机中输入用户名密码就可以连上UbuntuServer，默认的putty软件无法正常显示中文汉字，汉字会以感叹号显示。这个不用在意，用Xshell之类的软件连接UbuntuServer就可以正常显示中文提示内容。]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>系统运维</tag>
        <tag>Ubuntu</tag>
        <tag>UbuntuServer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建Shadowsocks服务]]></title>
    <url>%2F2015%2F10%2F01%2F20151001-build-shadowsocks-services%2F</url>
    <content type="text"><![CDATA[Ubuntu搭建shadowsocks检查Python版本：python -V 检查pip版本：pip -V，如果pip还没安装，则运行以下命令安装pip。 12sudo apt-get updatesudo apt-get install python-pip 安装shadowsocks 1sudo pip install shadowsocks 可以直接执行以下命令启动shadowsocks服务，不过最后是使用配置文件的方式 1ssserver -p 8000 -k password -m rc4-md5 -d start 配置shadowsocks123456789sudo vim etc/shadowsocks.json&#123; &quot;server&quot;: &quot;0.0.0.0&quot;, &quot;server_port&quot;: 9999, &quot;local_port&quot;: 1081, &quot;password&quot;: &quot;admin&quot;, &quot;timeout&quot;: 600, &quot;method&quot;: &quot;rc4-md5&quot;&#125; TIPS: 加密方式推荐使用rc4-md5，因为 RC4 比 AES 速度快好几倍，如果用在路由器上会带来显著性能提升。旧的 RC4 加密之所以不安全是因为 Shadowsocks 在每个连接上重复使用 key，没有使用 IV。现在已经重新正确实现，可以放心使用。更多可以看 issue。 启动shadowsocks服务1sudo ssserver -c /etc/shadowsocks.json -d start 当然，我们可不希望每次重启服务器都手动启动 SS, 因此我们要把这条命令放到 /etc/rc.local 这个文件下：sudo vim /etc/rc.local，这样以后就能开机自动运行了。 注意：如果python环境变量没配置的话需要加上python的路径：1/usr/bin/python /usr/local/bin/ssserver -c /etc/shadowsocks.json -d start 其他命令：123ssserver -c /etc/shadowsocks.json -d start # 启动服务ssserver -c /etc/shadowsocks.json -d restart # 重启服务ssserver -c /etc/shadowsocks.json -d stop # 停止服务 加速优化 1）、首先，将 Linux 内核升级到 3.5 或以上。 2）、增加系统文件描述符的最大限数，编辑文件 limits.conf 1vi /etc/security/limits.conf 增加以下两行： 12* soft nofile 51200* hard nofile 51200 启动shadowsocks服务器之前，设置以下参数 1ulimit -n 51200 3）、调整内核参数，修改配置文件 /etc/sysctl.conf 123456789101112131415161718fs.file-max = 51200net.core.rmem_max = 67108864net.core.wmem_max = 67108864net.core.netdev_max_backlog = 250000net.core.somaxconn = 4096net.ipv4.tcp_syncookies = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 0net.ipv4.tcp_fin_timeout = 30net.ipv4.tcp_keepalive_time = 1200net.ipv4.ip_local_port_range = 10000 65000net.ipv4.tcp_max_syn_backlog = 8192net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_fastopen = 3net.ipv4.tcp_rmem = 4096 87380 67108864net.ipv4.tcp_wmem = 4096 65536 67108864net.ipv4.tcp_mtu_probing = 1net.ipv4.tcp_congestion_control = hybla 修改后执行 sysctl -p 使配置生效 4）、还可以采用的加速方式：锐速（没试过） 客户端连接 a. 下载【客户端】软件。（请认准官方网站shadowsocks.org） b. 客户端软件配置 1.8）、如果启用了防火墙需要开启对应端口。 CentOS搭建shadowsocks安装：12yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks 配置： 其他配置和Ubuntu一样 Windows搭建shadowsocks不推荐。]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
        <tag>Shadowsocks</tag>
        <tag>VPN代理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决WordPress问题"您的密码重设链接无效"]]></title>
    <url>%2F2015%2F09%2F08%2F20150908-solve-wordpress-invalid-key%2F</url>
    <content type="text"><![CDATA[WordPress新用户注册时提示”您的密码重设链接无效”在使用Wordpress密码找回功能及新用户注册邮件中的重置密码链接时，Wordpress提示”您的密码重设链接无效，请在下方请求新链接。”、”该key似乎无效”、”invalid key”等信息。如下图： 这个其实不是wordpress的问题，邮箱收到邮件后，会将密码重置链接地址及其前后的“&lt;&gt;”一起当成链接地址生成超链接，点击此超链接后，由于传给wordpress的参数不对（多了个&gt;），例如把鼠标移到下图的红色框的连接上，并看到浏览器左下角的URL提示连接，会发现多了一个“&gt;”，所以wordpress提示密码重设链接无效，看下图： 此问题主要影响忘记密码时的找回密码功能及新用户注册时，系统给新用户发送的密码设置功能。可通过以下两个步骤解决此问题： 解决找回密码时提示”您的密码重设链接无效”打开WP根目录下的 wp-login.php，找到如下代码（374行左右）： 1&lt;span style="white-space:pre"&gt;&lt;/span&gt;$message .= '&lt;' . network_site_url("wp-login.php?action=rp&amp;key=$key&amp;login=" . rawurlencode($user_login), 'login') . "&gt;\r\n"; 修改为： 1&lt;span style="white-space:pre"&gt;&lt;/span&gt;$message .=network_site_url("wp-login.php?action=rp&amp;key=$key&amp;login=" . rawurlencode($user_login), 'login') . "\r\n"; 解决新用户注册时，点击邮件中的重置密码链接提示”您的密码重设链接无效”：打开WP安装目录下的/wp-includes/pluggable.php，找到如下代码（1741行左右）： 1$message .= '&lt;' . network_site_url("wp-login.php?action=rp&amp;key=$key&amp;login=" . rawurlencode($user-&gt;user_login), 'login') . "&gt;\r\n\r\n"; 修改为： 1$message .= network_site_url("wp-login.php?action=rp&amp;key=$key&amp;login=" . rawurlencode($user-&gt;user_login), 'login') . "\r\n\r\n"; 以上修改后，用户收到的密码重置及新用户收到的密码设置邮件将不会再包含“&lt;&gt;”,用户再邮箱中点击链接后即可正常重置或者设置密码。以上修改涉及到Wordpress源代码的修改，每次升级Wordpress后修改会被覆盖，必须重新进行以上修改。 另一种解决方式：把下面的代码加入当前主题的functions.php里面就可以了。1234567891011121314151617181920 /** * 修复WordPress找回密码提示“抱歉，该key似乎无效”问题 */ function reset_password_message( $message, $key ) &#123; if ( strpos($_POST['user_login'], '@') ) &#123; $user_data = get_user_by('email', trim($_POST['user_login'])); &#125; else &#123; $login = trim($_POST['user_login']); $user_data = get_user_by('login', $login); &#125; $user_login = $user_data-&gt;user_login; $msg = __('有人要求重设如下帐号的密码：'). "\r\n\r\n"; $msg .= network_site_url() . "\r\n\r\n"; $msg .= sprintf(__('用户名：%s'), $user_login) . "\r\n\r\n"; $msg .= __('若这不是您本人要求的，请忽略本邮件，一切如常。') . "\r\n\r\n"; $msg .= __('要重置您的密码，请打开下面的链接：'). "\r\n\r\n"; $msg .= network_site_url("wp-login.php?action=rp&amp;key=$key&amp;login=" . rawurlencode($user_login), 'login'); return $msg; &#125; add_filter('retrieve_password_message', reset_password_message, null, 2); 这种办法的缺点是，每次换主题都要重新把代码添加到主题的function.php文件中。]]></content>
      <categories>
        <category>技术开发</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
        <tag>技术开发</tag>
      </tags>
  </entry>
</search>
